name: Foto
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/predio/{uuid}/foto'
    metadata:
      groupName: Foto
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Listagem de fotos do prédio'
      description: ''
      authenticated: false
      custom: []
    headers: []
    urlParameters:
      uuid:
        name: uuid
        description: 'O Uuid do prédio.'
        required: true
        example: 746fe4d9-66de-4074-bf4b-077927164b03
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 746fe4d9-66de-4074-bf4b-077927164b03
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Listagem retornada com sucesso",
           "data": [
             {
               "uuid": "8056d5b1-9440-4714-9513-ce9f7bf987b9",
               "url": "https:\/\/via.placeholder.com\/640x480.png\/00ffbb?text=cats+Faker+eaque",
               "path": "\/tmp\/fakerzPQd5C",
               "nome": "Miss Bridgette Wiegand DDS",
               "descricao": "Neque quisquam amet nostrum eos culpa unde dolor. Ipsa sequi eum laudantium. Iusto ipsam sapiente nisi veritatis maiores omnis et qui."
             },
             {
               "uuid": "87a06252-d370-4606-977a-61c66e6cc1a6",
               "url": "https:\/\/via.placeholder.com\/640x480.png\/00dd22?text=cats+Faker+et",
               "path": "\/tmp\/fakerzrVQzN",
               "nome": "Prof. Ellsworth Schowalter DVM",
               "descricao": "Delectus consequuntur et voluptatum maxime. Et quia voluptatem voluptas. Quas vel voluptatum atque reprehenderit."
             },
             {
               "uuid": "2bb22bf1-5050-468d-a02d-9d45a229e005",
               "url": "https:\/\/via.placeholder.com\/640x480.png\/000011?text=cats+Faker+omnis",
               "path": "\/tmp\/fakerRqcyRF",
               "nome": "Aryanna Murphy",
               "descricao": "Qui nesciunt eum consequatur et assumenda consectetur cum. Sunt magnam ad unde earum. Pariatur voluptatem velit et."
             }
           ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/predio/{uuid}/foto'
    metadata:
      groupName: Foto
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Cadastrando a foto de um predio ou sala'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
    urlParameters:
      uuid:
        name: uuid
        description: 'uuid do Sala ou Prédio.'
        required: true
        example: 1436a969-96b1-4e70-976d-426601fc4d55
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 1436a969-96b1-4e70-976d-426601fc4d55
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nome:
        name: nome
        description: 'Nome da foto.'
        required: true
        example: 'Foto 1'
        type: string
        custom: []
      descricao:
        name: descricao
        description: 'Descrição da foto.'
        required: true
        example: 'Foto 1'
        type: string
        custom: []
      foto:
        name: foto
        description: Foto.
        required: true
        example: null
        type: file
        custom: []
      tipo:
        name: tipo
        description: 'Tipo do recurso a ser utilizado (sala ou predio).'
        required: true
        example: predio
        type: string
        custom: []
    cleanBodyParameters:
      nome: 'Foto 1'
      descricao: 'Foto 1'
      tipo: predio
    fileParameters:
      foto: null
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Registro cadastrado com sucesso",
           "data": {
             "nome": "foto test",
             "descricao": "description foto test",
             "url": "http:\/\/localhost:9000\/storage\/predio\/bz4IxCtxyQF2oDR0xRJUtAbqaQI5FMsSSBUGo717.jpg",
             "path": "predio\/bz4IxCtxyQF2oDR0xRJUtAbqaQI5FMsSSBUGo717.jpg",
             "uuid": "46a3d089-dc55-4432-bf56-ea8f1f13fdc7"
           }
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/predio/{uuid}/foto/{foto_uuid}'
    metadata:
      groupName: Foto
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Atualização de registro de uma foto'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
    urlParameters:
      uuid:
        name: uuid
        description: 'O Uuid do Sala ou Prédio.'
        required: true
        example: 746fe4d9-66de-4074-bf4b-077927164b03
        type: string
        custom: []
      foto_uuid:
        name: foto_uuid
        description: ''
        required: true
        example: 16
        type: integer
        custom: []
    cleanUrlParameters:
      uuid: 746fe4d9-66de-4074-bf4b-077927164b03
      foto_uuid: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nome:
        name: nome
        description: 'Nome da foto.'
        required: false
        example: 'Foto 1'
        type: string
        custom: []
      descricao:
        name: descricao
        description: 'Descrição da foto.'
        required: false
        example: 'Foto 1'
        type: string
        custom: []
      foto:
        name: foto
        description: Foto.
        required: false
        example: null
        type: file
        custom: []
      tipo:
        name: tipo
        description: 'Tipo do recurso a ser utilizado (sala ou predio).'
        required: false
        example: predio
        type: string
        custom: []
    cleanBodyParameters:
      nome: 'Foto 1'
      descricao: 'Foto 1'
      tipo: predio
    fileParameters:
      foto: null
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Registro cadastrado com sucesso",
           "data": {
             "nome": "foto test",
             "descricao": "description foto test",
             "url": "http:\/\/localhost:9000\/storage\/predio\/BFa2ZUoe0nABOm1qYlKoyRtviBS6LLf838Zv27yq.jpg",
             "path": "predio\/BFa2ZUoe0nABOm1qYlKoyRtviBS6LLf838Zv27yq.jpg",
             "uuid": "e3ee01d3-c66f-4e4f-aa0d-bfd6976fb622"
           }
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/predio/{uuid}/foto/{foto_uuid}'
    metadata:
      groupName: Foto
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Removendo o registro de um prédio'
      description: ''
      authenticated: false
      custom: []
    headers: []
    urlParameters:
      uuid:
        name: uuid
        description: 'O Uuid do Prédio ou Sala.'
        required: true
        example: 746fe4d9-66de-4074-bf4b-077927164b03
        type: string
        custom: []
      foto_uuid:
        name: foto_uuid
        description: 'O Uuid da foto a ser removida.'
        required: true
        example: 746fe4d9-66de-4074-bf4b-077927164b03
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 746fe4d9-66de-4074-bf4b-077927164b03
      foto_uuid: 746fe4d9-66de-4074-bf4b-077927164b03
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Registro removido com sucesso",
           "data": []
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/sala/{uuid}/foto'
    metadata:
      groupName: Foto
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Listagem de fotos da sala'
      description: ''
      authenticated: false
      custom: []
    headers: []
    urlParameters:
      uuid:
        name: uuid
        description: 'O Uuid da sala.'
        required: true
        example: 746fe4d9-66de-4074-bf4b-077927164b03
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 746fe4d9-66de-4074-bf4b-077927164b03
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Listagem retornada com sucesso",
           "data": [
             {
               "uuid": "8056d5b1-9440-4714-9513-ce9f7bf987b9",
               "url": "https:\/\/via.placeholder.com\/640x480.png\/00ffbb?text=cats+Faker+eaque",
               "path": "\/tmp\/fakerzPQd5C",
               "nome": "Miss Bridgette Wiegand DDS",
               "descricao": "Neque quisquam amet nostrum eos culpa unde dolor. Ipsa sequi eum laudantium. Iusto ipsam sapiente nisi veritatis maiores omnis et qui."
             },
             {
               "uuid": "87a06252-d370-4606-977a-61c66e6cc1a6",
               "url": "https:\/\/via.placeholder.com\/640x480.png\/00dd22?text=cats+Faker+et",
               "path": "\/tmp\/fakerzrVQzN",
               "nome": "Prof. Ellsworth Schowalter DVM",
               "descricao": "Delectus consequuntur et voluptatum maxime. Et quia voluptatem voluptas. Quas vel voluptatum atque reprehenderit."
             },
             {
               "uuid": "2bb22bf1-5050-468d-a02d-9d45a229e005",
               "url": "https:\/\/via.placeholder.com\/640x480.png\/000011?text=cats+Faker+omnis",
               "path": "\/tmp\/fakerRqcyRF",
               "nome": "Aryanna Murphy",
               "descricao": "Qui nesciunt eum consequatur et assumenda consectetur cum. Sunt magnam ad unde earum. Pariatur voluptatem velit et."
             }
           ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/sala/{uuid}/foto'
    metadata:
      groupName: Foto
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Cadastrando a foto de um predio ou sala'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
    urlParameters:
      uuid:
        name: uuid
        description: 'uuid do Sala ou Prédio.'
        required: true
        example: 1436a969-96b1-4e70-976d-426601fc4d55
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 1436a969-96b1-4e70-976d-426601fc4d55
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nome:
        name: nome
        description: 'Nome da foto.'
        required: true
        example: 'Foto 1'
        type: string
        custom: []
      descricao:
        name: descricao
        description: 'Descrição da foto.'
        required: true
        example: 'Foto 1'
        type: string
        custom: []
      foto:
        name: foto
        description: Foto.
        required: true
        example: null
        type: file
        custom: []
      tipo:
        name: tipo
        description: 'Tipo do recurso a ser utilizado (sala ou predio).'
        required: true
        example: predio
        type: string
        custom: []
    cleanBodyParameters:
      nome: 'Foto 1'
      descricao: 'Foto 1'
      tipo: predio
    fileParameters:
      foto: null
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Registro cadastrado com sucesso",
           "data": {
             "nome": "foto test",
             "descricao": "description foto test",
             "url": "http:\/\/localhost:9000\/storage\/predio\/bz4IxCtxyQF2oDR0xRJUtAbqaQI5FMsSSBUGo717.jpg",
             "path": "predio\/bz4IxCtxyQF2oDR0xRJUtAbqaQI5FMsSSBUGo717.jpg",
             "uuid": "46a3d089-dc55-4432-bf56-ea8f1f13fdc7"
           }
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/sala/{uuid}/foto/{foto_uuid}'
    metadata:
      groupName: Foto
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Atualização de registro de uma foto'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
    urlParameters:
      uuid:
        name: uuid
        description: 'O Uuid do Sala ou Prédio.'
        required: true
        example: 746fe4d9-66de-4074-bf4b-077927164b03
        type: string
        custom: []
      foto_uuid:
        name: foto_uuid
        description: ''
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      uuid: 746fe4d9-66de-4074-bf4b-077927164b03
      foto_uuid: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nome:
        name: nome
        description: 'Nome da foto.'
        required: false
        example: 'Foto 1'
        type: string
        custom: []
      descricao:
        name: descricao
        description: 'Descrição da foto.'
        required: false
        example: 'Foto 1'
        type: string
        custom: []
      foto:
        name: foto
        description: Foto.
        required: false
        example: null
        type: file
        custom: []
      tipo:
        name: tipo
        description: 'Tipo do recurso a ser utilizado (sala ou predio).'
        required: false
        example: predio
        type: string
        custom: []
    cleanBodyParameters:
      nome: 'Foto 1'
      descricao: 'Foto 1'
      tipo: predio
    fileParameters:
      foto: null
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Registro cadastrado com sucesso",
           "data": {
             "nome": "foto test",
             "descricao": "description foto test",
             "url": "http:\/\/localhost:9000\/storage\/predio\/BFa2ZUoe0nABOm1qYlKoyRtviBS6LLf838Zv27yq.jpg",
             "path": "predio\/BFa2ZUoe0nABOm1qYlKoyRtviBS6LLf838Zv27yq.jpg",
             "uuid": "e3ee01d3-c66f-4e4f-aa0d-bfd6976fb622"
           }
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/sala/{uuid}/foto/{foto_uuid}'
    metadata:
      groupName: Foto
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Removendo o registro de um prédio'
      description: ''
      authenticated: false
      custom: []
    headers: []
    urlParameters:
      uuid:
        name: uuid
        description: 'O Uuid do Prédio ou Sala.'
        required: true
        example: 746fe4d9-66de-4074-bf4b-077927164b03
        type: string
        custom: []
      foto_uuid:
        name: foto_uuid
        description: 'O Uuid da foto a ser removida.'
        required: true
        example: 746fe4d9-66de-4074-bf4b-077927164b03
        type: string
        custom: []
    cleanUrlParameters:
      uuid: 746fe4d9-66de-4074-bf4b-077927164b03
      foto_uuid: 746fe4d9-66de-4074-bf4b-077927164b03
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "Registro removido com sucesso",
           "data": []
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
